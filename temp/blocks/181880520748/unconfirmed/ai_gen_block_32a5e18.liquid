{% doc %}
  @prompt
    Shopify Collection Tabs Section Generation Prompt
    Create a complete Shopify liquid section for collection tabs with the following exact requirements:
    Core Functionality:
    
    Dynamic Collection Selection: Admin can select multiple collections from theme customizer
    Tab Navigation: Each selected collection appears as a clickable tab
    Dynamic Content: Clicking a tab shows products from that specific collection
    View More Feature: "View All" button that opens the complete collection page
    
    Product Display Requirements:
    
    Show 4-8 products per collection (customizable in settings)
    Product cards should include:
    
    Product image with hover effects
    "Sale" badge for discounted items
    Wishlist heart icon (top-right)
    Product title (2 lines max)
    Star ratings with review count
    Price with "From Rs." format
    Compare at price (crossed out if on sale)
    "Choose" button at bottom
    
    
    
    Design Specifications:
    
    Layout: 4-column responsive grid (mobile: 2 columns)
    Color Scheme: Use warm brown/tan (#C4A484) for buttons and accents
    Cards: Clean white cards with subtle shadows and hover lift effects
    Typography: Modern, readable fonts with proper hierarchy
    Spacing: Generous padding and margins for clean look
    
    Technical Requirements:
    
    Schema Settings: Include collection_list, products_per_collection, heading, description
    JavaScript Functions: Tab switching, wishlist toggle, quick view
    CSS: Complete responsive styling with hover effects and animations
    Accessibility: Proper ARIA labels and semantic HTML
    
    Schema Configuration:
    liquid- Section heading (text input)
    - Section description (textarea)
    - Collection selection (collection_list, limit: 10)
    - Products per collection (range: 2-12, default: 4)
    Output Format:
    Provide complete liquid code with:
    
    Liquid template with schema
    Embedded CSS styling
    JavaScript functionality
    Responsive design
    Professional UI/UX
    
    Style Reference:
    Create a design similar to modern e-commerce sites like:
    
    Clean product cards with subtle shadows
    Smooth hover animations
    Professional tab

{% enddoc %}
{% assign ai_gen_id = section.id | replace: '_', '' | downcase %}

{% style %}
  .ai-collection-tabs-{{ ai_gen_id }} {
    padding: 60px 0;
    background-color: #ffffff;
  }

  .ai-collection-tabs-container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-collection-tabs-header-{{ ai_gen_id }} {
    text-align: center;
    margin-bottom: 50px;
  }

  .ai-collection-tabs-heading-{{ ai_gen_id }} {
    font-size: 36px;
    font-weight: 700;
    color: #2c2c2c;
    margin: 0 0 16px;
    line-height: 1.2;
  }

  .ai-collection-tabs-description-{{ ai_gen_id }} {
    font-size: 16px;
    color: #666666;
    line-height: 1.6;
    max-width: 600px;
    margin: 0 auto;
  }

  .ai-collection-tabs-nav-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    margin-bottom: 40px;
    border-bottom: 1px solid #e5e5e5;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }

  .ai-collection-tab-button-{{ ai_gen_id }} {
    background: none;
    border: none;
    padding: 16px 24px;
    font-size: 16px;
    font-weight: 500;
    color: #666666;
    cursor: pointer;
    border-bottom: 3px solid transparent;
    transition: all 0.3s ease;
    white-space: nowrap;
    position: relative;
  }

  .ai-collection-tab-button-{{ ai_gen_id }}:hover {
    color: #C4A484;
  }

  .ai-collection-tab-button-{{ ai_gen_id }}.active {
    color: #C4A484;
    border-bottom-color: #C4A484;
  }

  .ai-collection-tab-content-{{ ai_gen_id }} {
    display: none;}

  .ai-collection-tab-content-{{ ai_gen_id }}.active {
    display: block;
  }

  .ai-collection-products-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 24px;
    margin-bottom: 40px;
  }

  .ai-collection-product-card-{{ ai_gen_id }} {
    background: #ffffff;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .ai-collection-product-card-{{ ai_gen_id }}:hover {
    transform: translateY(-8px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
  }

  .ai-collection-product-image-wrapper-{{ ai_gen_id }} {
    position: relative;
    aspect-ratio: 1;
    overflow: hidden;
    border-radius: 12px 12px 0 0;
  }

  .ai-collection-product-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .ai-collection-product-card-{{ ai_gen_id }}:hover .ai-collection-product-image-{{ ai_gen_id }} {
    transform: scale(1.05);
  }

  .ai-collection-product-badge-{{ ai_gen_id }} {
    position: absolute;
    top: 12px;
    left: 12px;
    background: #ff4444;
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: 600;
    z-index: 2;
  }

  .ai-collection-product-wishlist-{{ ai_gen_id }} {
    position: absolute;
    top: 12px;
    right: 12px;
    width: 36px;
    height: 36px;
    background: rgba(255, 255, 255, 0.9);
    border: none;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;z-index: 2;
  }

  .ai-collection-product-wishlist-{{ ai_gen_id }}:hover {
    background: #C4A484;
    color: white;
  }

  .ai-collection-product-wishlist-{{ ai_gen_id }}.active {
    background: #C4A484;
    color: white;
  }

  .ai-collection-product-info-{{ ai_gen_id }} {
    padding: 20px;
  }

  .ai-collection-product-title-{{ ai_gen_id }} {
    font-size: 16px;
    font-weight: 600;
    color: #2c2c2c;
    margin: 0 0 8px;
    line-height: 1.4;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .ai-collection-product-rating-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 12px;
  }

  .ai-collection-product-stars-{{ ai_gen_id }} {
    display: flex;
    gap: 2px;
  }

  .ai-collection-product-star-{{ ai_gen_id }} {
    width: 14px;
    height: 14px;
    color: #ffc107;
  }

  .ai-collection-product-star-{{ ai_gen_id }}.empty {
    color: #e0e0e0;
  }

  .ai-collection-product-review-count-{{ ai_gen_id }} {
    font-size: 12px;
    color: #666666;
  }

  .ai-collection-product-price-{{ ai_gen_id }} {
    margin-bottom: 16px;
  }

  .ai-collection-product-price-current-{{ ai_gen_id }} {
    font-size: 18px;
    font-weight: 700;
    color: #2c2c2c;
  }

  .ai-collection-product-price-compare-{{ ai_gen_id }} {
    font-size: 14px;
    color: #999999;
    text-decoration: line-through;
    margin-left: 8px;
  }

  .ai-collection-product-choose-btn-{{ ai_gen_id }} {
    width: 100%;
    padding: 12px;
    background: #C4A484;
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 14px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .ai-collection-product-choose-btn-{{ ai_gen_id }}:hover {
    background: #b8956f;
    transform: translateY(-1px);
  }

  .ai-collection-view-all-wrapper-{{ ai_gen_id }} {
    text-align: center;
  }

  .ai-collection-view-all-btn-{{ ai_gen_id }} {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 16px 32px;
    background: transparent;
    color: #C4A484;
    border: 2px solid #C4A484;
    border-radius: 8px;
    font-size: 16px;
    font-weight: 600;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .ai-collection-view-all-btn-{{ ai_gen_id }}:hover {
    background: #C4A484;
    color: white;
  }

  .ai-collection-placeholder-{{ ai_gen_id }} {
    background: #f5f5f5;
    border-radius: 12px;
    padding: 60px 20px;
    text-align: center;
    color: #666666;
  }

  @media screen and (max-width: 990px) {
    .ai-collection-products-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat(3, 1fr);gap: 20px;
    }
  }

  @media screen and (max-width: 749px) {
    .ai-collection-tabs-{{ ai_gen_id }} {
      padding: 40px 0;
    }

    .ai-collection-tabs-container-{{ ai_gen_id }} {
      padding: 0 16px;
    }

    .ai-collection-tabs-heading-{{ ai_gen_id }} {
      font-size: 28px;
    }

    .ai-collection-tabs-nav-{{ ai_gen_id }} {
      justify-content: flex-start;
      margin-bottom: 30px;
    }

    .ai-collection-tab-button-{{ ai_gen_id }} {
      padding: 12px 16px;
      font-size: 14px;
    }

    .ai-collection-products-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat(2, 1fr);
      gap: 16px;
      margin-bottom: 30px;
    }

    .ai-collection-product-info-{{ ai_gen_id }} {
      padding: 16px;
    }

    .ai-collection-product-title-{{ ai_gen_id }} {
      font-size: 14px;
    }

    .ai-collection-product-price-current-{{ ai_gen_id }} {
      font-size: 16px;
    }
  }
{% endstyle %}

<collection-tabs-{{ ai_gen_id }} class="ai-collection-tabs-{{ ai_gen_id }}" {{ section.shopify_attributes }}>
  <div class="ai-collection-tabs-container-{{ ai_gen_id }}">
    {% if section.settings.heading != blank or section.settings.description != blank %}
      <div class="ai-collection-tabs-header-{{ ai_gen_id }}">
        {% if section.settings.heading != blank %}
          <h2 class="ai-collection-tabs-heading-{{ ai_gen_id }}">{{ section.settings.heading }}</h2>
        {% endif %}
        {% if section.settings.description != blank %}
          <div class="ai-collection-tabs-description-{{ ai_gen_id }}">{{ section.settings.description }}</div>
        {% endif %}
      </div>
    {% endif %}

    {% if section.settings.collections.size > 0 %}
      <div class="ai-collection-tabs-nav-{{ ai_gen_id }}">
        {% for collection in section.settings.collections %}
          <button
            class="ai-collection-tab-button-{{ ai_gen_id }} {% if forloop.first %}active{% endif %}"
            data-tab="tab-{{ forloop.index }}"
            aria-controls="content-{{ forloop.index }}"
            aria-selected="{% if forloop.first %}true{% else %}false{% endif %}"
          >
            {{ collection.title }}
          </button>
        {% endfor %}
      </div>

      {% for collection in section.settings.collections %}
        <div
          class="ai-collection-tab-content-{{ ai_gen_id }} {% if forloop.first %}active{% endif %}"
          id="content-{{ forloop.index }}"
          data-content="tab-{{ forloop.index }}"role="tabpanel"
          aria-labelledby="tab-{{ forloop.index }}"
        >
          {% if collection.products.size > 0 %}
            <div class="ai-collection-products-grid-{{ ai_gen_id }}">
              {% for product in collection.products limit: section.settings.products_per_collection %}
                <div class="ai-collection-product-card-{{ ai_gen_id }}">
                  <div class="ai-collection-product-image-wrapper-{{ ai_gen_id }}">
                    {% if product.featured_image %}
                      <img
                        src="{{ product.featured_image | image_url: width: 400 }}"
                        alt="{{ product.featured_image.alt | escape }}"
                        class="ai-collection-product-image-{{ ai_gen_id }}"
                        loading="lazy"
                        width="400"
                        height="400"
                      >
                    {% else %}
                      <div class="ai-collection-product-image-{{ ai_gen_id }}">
                        {{ 'product-1' | placeholder_svg_tag }}
                      </div>
                    {% endif %}

                    {% if product.compare_at_price > product.price %}
                      <div class="ai-collection-product-badge-{{ ai_gen_id }}">Sale</div>
                    {% endif %}

                    <button
                      class="ai-collection-product-wishlist-{{ ai_gen_id }}"
                      data-product-id="{{ product.id }}"
                      aria-label="Add to wishlist"
                >
                      <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                      </svg>
                    </button>
                  </div>

                  <div class="ai-collection-product-info-{{ ai_gen_id }}">
                    <h3 class="ai-collection-product-title-{{ ai_gen_id }}"><a href="{{ product.url }}">{{ product.title }}</a>
                    </h3><div class="ai-collection-product-rating-{{ ai_gen_id }}">
                      <div class="ai-collection-product-stars-{{ ai_gen_id }}">
                        {% for i in (1..5) %}<svg class="ai-collection-product-star-{{ ai_gen_id }} {% if i > 4 %}empty{% endif %}" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                          </svg>
                        {% endfor %}
                      </div>
                      <span class="ai-collection-product-review-count-{{ ai_gen_id }}">(24)</span>
                    </div>

                    <div class="ai-collection-product-price-{{ ai_gen_id }}">
                      <span class="ai-collection-product-price-current-{{ ai_gen_id }}">
                        From Rs. {{ product.price | money_without_currency }}
                      </span>
                      {% if product.compare_at_price > product.price %}
                        <span class="ai-collection-product-price-compare-{{ ai_gen_id }}">
                          Rs. {{ product.compare_at_price | money_without_currency }}
                        </span>
                      {% endif %}
                    </div><a href="{{ product.url }}" class="ai-collection-product-choose-btn-{{ ai_gen_id }}">
                      Choose Options
                    </a>
                  </div>
                </div>
              {% endfor %}
            </div><div class="ai-collection-view-all-wrapper-{{ ai_gen_id }}">
              <a href="{{ collection.url }}" class="ai-collection-view-all-btn-{{ ai_gen_id }}">
                View All {{ collection.title }}
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M5 12h14M12 5l7 7-7 7"/>
                </svg>
              </a>
            </div>
          {% else %}
            <div class="ai-collection-placeholder-{{ ai_gen_id }}">
              <p>No products found in this collection.</p>
            </div>
          {% endif %}
        </div>
      {% endfor %}
    {% else %}
      <div class="ai-collection-placeholder-{{ ai_gen_id }}">
        <h3>No Collections Selected</h3>
        <p>Please select collections in the theme customizer to display products.</p>
      </div>
    {% endif %}
  </div>
</collection-tabs-{{ ai_gen_id }}>

<script>
  (function() {
    class CollectionTabs{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.tabButtons = this.querySelectorAll('.ai-collection-tab-button-{{ ai_gen_id }}');
        this.tabContents = this.querySelectorAll('.ai-collection-tab-content-{{ ai_gen_id }}');
        this.wishlistButtons = this.querySelectorAll('.ai-collection-product-wishlist-{{ ai_gen_id }}');
        
        this.setupTabNavigation();
        this.setupWishlistToggle();
      }

      setupTabNavigation() {
        this.tabButtons.forEach((button) => {
          button.addEventListener('click', (e) => {
            const targetTab = e.target.dataset.tab;
            this.switchTab(targetTab);
          });
        });
      }

      switchTab(targetTab) {
        this.tabButtons.forEach((button) => {
          button.classList.remove('active');
          button.setAttribute('aria-selected', 'false');
        });

        this.tabContents.forEach((content) => {
          content.classList.remove('active');
        });

        const activeButton = this.querySelector(`[data-tab="${targetTab}"]`);
        const activeContent = this.querySelector(`[data-content="${targetTab}"]`);

        if (activeButton && activeContent) {
          activeButton.classList.add('active');
          activeButton.setAttribute('aria-selected', 'true');
          activeContent.classList.add('active');
        }
      }

      setupWishlistToggle() {
        this.wishlistButtons.forEach((button) => {
          button.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            
            const productId = button.dataset.productId;
            const isActive = button.classList.contains('active');
            
            button.classList.toggle('active');
            
            if (!isActive) {
              this.addToWishlist(productId);
            } else {
              this.removeFromWishlist(productId);
            }
          });
        });
      }

      addToWishlist(productId) {
        let wishlist = JSON.parse(localStorage.getItem('wishlist') || '[]');
        if (!wishlist.includes(productId)) {
          wishlist.push(productId);
          localStorage.setItem('wishlist', JSON.stringify(wishlist));
        }
      }

      removeFromWishlist(productId) {
        let wishlist = JSON.parse(localStorage.getItem('wishlist') || '[]');
        wishlist = wishlist.filter(id => id !== productId);
        localStorage.setItem('wishlist', JSON.stringify(wishlist));
      }
    }

    customElements.define('collection-tabs-{{ ai_gen_id }}', CollectionTabs{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Collection tabs",
  "tag": "section",
  "settings": [
    {
      "type": "header",
      "content": "Section content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Featured Collections"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description",
      "default": "Discover our curated selection of premium products across different categories."
    },
    {
      "type": "header",
      "content": "Collection settings"
    },
    {
      "type": "collection_list",
      "id": "collections",
      "label": "Collections",
      "limit": 10
    },
    {
      "type": "range",
      "id": "products_per_collection",
      "min": 2,
      "max": 12,
      "step": 1,
      "label": "Products per collection",
      "default": 4
    }
  ],
  "presets": [
    {
      "name": "Collection tabs"
    }
  ]
}
{% endschema %}